<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.project.cse.boot.mappers.InventoryMapper">
    <resultMap id="inventroyResult" type="Inventory">
        <result column="INVENTORY_NO" property="inventoryNo"/>
        <result column="STORE_NO" property="storeNo"/>
        <result column="PRODUCT_NO" property="productNo"/>
        <result column="INVENTORY_COUNT" property="inventoryCount"/>
        <result column="EXPIRATION_DATE" property="expeirationDate"/>

        <result column="CATEGORY_NAME" property="categoryName"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="SALE_PRICE" property="salePrice"/>
        <result column="SHORTAGE_AMOUNT" property="shortageAmount"/>
        <result column="TOTAL_INVENTORY" property="totalInventory"/>
        <result column="INVENTORY_STATUS" property="inventoryStatus"/>

    </resultMap>

    <select id="inventoryCount" resultType="_int">
        SELECT COUNT(DISTINCT PRODUCT_NO)
        FROM INVENTORY
        WHERE STORE_NO = #{storeNo}
    </select>

    <select id="selectInventory" resultMap="inventroyResult">
        SELECT
        I.PRODUCT_NO,
        C.CATEGORY_NAME,
        P.PRODUCT_NAME,
        SUM(I.INVENTORY_COUNT) AS TOTAL_INVENTORY,
        (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) AS INVENTORY_STATUS
        FROM INVENTORY I
        LEFT JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        LEFT JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.STORE_NO = #{storeNo}
        GROUP BY I.PRODUCT_NO, C.CATEGORY_NAME, P.PRODUCT_NAME
        ORDER BY I.PRODUCT_NO DESC
    </select>

    <select id="searchInventoryCount" resultType="_int">
        SELECT COUNT(*)
        FROM (
        SELECT
        I.PRODUCT_NO,
        C.CATEGORY_NAME,
        P.PRODUCT_NAME,
        SUM(I.INVENTORY_COUNT) AS TOTAL_INVENTORY,
        (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) AS INVENTORY_STATUS
        FROM INVENTORY I
        LEFT JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        LEFT JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.STORE_NO = #{storeNo}

        <!-- 검색 조건 -->
        <if test="condition == 'productNo' and keyword != null and keyword != ''">
            AND TO_CHAR(I.PRODUCT_NO) LIKE '%' || #{keyword} || '%'
        </if>
        <if test="condition == 'categoryName' and keyword != null and keyword != ''">
            AND C.CATEGORY_NAME LIKE '%' || #{keyword} || '%'
        </if>
        <if test="condition == 'productName' and keyword != null and keyword != ''">
            AND P.PRODUCT_NAME LIKE '%' || #{keyword} || '%'
        </if>

        GROUP BY I.PRODUCT_NO, C.CATEGORY_NAME, P.PRODUCT_NAME

        <!-- 재고부족 체크 (체크 시 check=1로 전달됨) -->
        <if test="check != null and check == 1">
            HAVING (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) = 0
        </if>
        )
    </select>

    <select id="searchInventory" resultMap="inventroyResult">
        SELECT
        I.PRODUCT_NO,
        C.CATEGORY_NAME,
        P.PRODUCT_NAME,
        SUM(I.INVENTORY_COUNT) AS TOTAL_INVENTORY,
        (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) AS INVENTORY_STATUS
        FROM INVENTORY I
        LEFT JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        LEFT JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.STORE_NO = #{storeNo}

        <!-- 검색 조건 -->
        <if test="condition == 'productNo' and keyword != null and keyword != ''">
            AND TO_CHAR(I.PRODUCT_NO) LIKE '%' || #{keyword} || '%'
        </if>
        <if test="condition == 'categoryName' and keyword != null and keyword != ''">
            AND C.CATEGORY_NAME LIKE '%' || #{keyword} || '%'
        </if>
        <if test="condition == 'productName' and keyword != null and keyword != ''">
            AND P.PRODUCT_NAME LIKE '%' || #{keyword} || '%'
        </if>

        GROUP BY I.PRODUCT_NO, C.CATEGORY_NAME, P.PRODUCT_NAME

        <!-- 재고부족 체크 (체크 시 check=1로 전달됨) -->
        <if test="check != null and check == 1">
            HAVING (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) = 0
        </if>
    </select>



    <select id="posAllInventroySelect" resultMap="inventroyResult">
        SELECT
        I.PRODUCT_NO,
        P.PRODUCT_NAME,
        P.SALE_PRICE,
        SUM(I.INVENTORY_COUNT) AS TOTAL_INVENTORY,
        (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) AS INVENTORY_STATUS
        FROM INVENTORY I
        JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        WHERE I.STORE_NO = #{storeNo}
        GROUP BY I.PRODUCT_NO, P.PRODUCT_NAME, P.SALE_PRICE
        ORDER BY I.PRODUCT_NO DESC
    </select>

    <select id="posInventroySearch" resultMap="inventroyResult">
        SELECT
        I.PRODUCT_NO,
        P.PRODUCT_NAME,
        P.SALE_PRICE,
        SUM(I.INVENTORY_COUNT) AS TOTAL_INVENTORY,
        (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) AS INVENTORY_STATUS
        FROM INVENTORY I
        JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        WHERE I.STORE_NO = #{storeNo}
        And P.PRODUCT_NO LIKE '%${keyword}%'
        GROUP BY I.PRODUCT_NO, P.PRODUCT_NAME, P.SALE_PRICE
        ORDER BY I.PRODUCT_NO DESC
    </select>

    <select id="selectdashInventoryCount" resultType="_int">
        SELECT COUNT(*)
        FROM (
        SELECT
        (SUM(I.INVENTORY_COUNT) - MAX(P.SHORTAGE_AMOUNT)) AS INVENTORY_STATUS
        FROM INVENTORY I
        LEFT JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        WHERE I.STORE_NO = #{storeNo}
        GROUP BY I.PRODUCT_NO
        )
        WHERE INVENTORY_STATUS = 0
    </select>

</mapper>
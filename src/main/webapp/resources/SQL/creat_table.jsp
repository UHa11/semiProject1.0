DROP TABLE CATEGORY CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
-- 테이블 삭제
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE CIRCULATION';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE INVENTORY';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE REPLY';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE ANNOUNCEMENT';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE ATTENDANCE';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE MEMBER';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE PRODUCT';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE CATEGORY';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE STORE';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE REPLY';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/


-- 시퀀스 삭제
--맴버--
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_MNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--카테고리--
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_CNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--유통--
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_CIRNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--지점--
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_STNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--상품번호--
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PRNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--재고--
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_INO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--근태관리
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ATNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/
--공지번호
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ANNO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
--댓글
/
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_RENO';
EXCEPTION
WHEN OTHERS THEN NULL;
END;
/


-- 시퀀스 생성
CREATE SEQUENCE SEQ_MNO MINVALUE 0 START WITH 0; --맴버
CREATE SEQUENCE SEQ_CIRNO; --유통
CREATE SEQUENCE SEQ_STNO MINVALUE 0 START WITH 0; --지점
CREATE SEQUENCE SEQ_PRNO; --상품번호
CREATE SEQUENCE SEQ_CNO; --카테고리
CREATE SEQUENCE SEQ_INO; --재고
CREATE SEQUENCE SEQ_ATNO; --근태관리
CREATE SEQUENCE SEQ_ANNO; --공지번호
CREATE SEQUENCE SEQ_RENO; --댓글번호

-- CATEGORY 테이블
CREATE TABLE CATEGORY(
CATEGORY_NO NUMBER NOT NULL,
CATEGORY_NAME VARCHAR2(50) NOT NULL,
EXPIRATION_DATE NUMBER,
PRIMARY KEY (CATEGORY_NO)
);

-- PRODUCT 테이블
CREATE TABLE PRODUCT(
PRODUCT_NO NUMBER PRIMARY KEY,
CATEGORY_NO NUMBER NOT NULL,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
ORIGIN_NAME VARCHAR2(255) ,
CHANGE_NAME VARCHAR2(255),
FILE_PATH VARCHAR2(1000),
INPUT_PRICE NUMBER DEFAULT 0 NOT NULL,
SALE_PRICE NUMBER DEFAULT 0 NOT NULL,
SHORTAGE_AMOUNT NUMBER DEFAULT 1 NOT NULL,
AVAILABILITY VARCHAR2(3) DEFAULT 'Y' NOT NULL CHECK (AVAILABILITY IN ('Y', 'N')),
PRODUCT_STATUS NUMBER,

FOREIGN KEY (CATEGORY_NO) REFERENCES CATEGORY (CATEGORY_NO)
);


-- STORE 테이블
CREATE TABLE STORE (
STORE_NO NUMBER PRIMARY KEY,
STORE_NAME VARCHAR2(100) NOT NULL,
STORE_DATE DATE DEFAULT SYSDATE NOT NULL,
STORE_STATUS NUMBER DEFAULT 2 NOT NULL
);



-- MEMBER 테이블
CREATE TABLE MEMBER(
MEMBER_NO NUMBER NOT NULL PRIMARY KEY,
STORE_NO NUMBER,
POSITION VARCHAR2(50) NOT NULL,
MEMBER_NAME VARCHAR2(50) NOT NULL,
PHONE_NUMBER VARCHAR2(20),
RESIDENT_NUMBER VARCHAR2(20) NOT NULL,
MEMBER_ID VARCHAR2(15) NOT NULL,
MEMBER_PWD VARCHAR2(100) NOT NULL,
MEMBER_STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL CHECK (MEMBER_STATUS IN ('Y', 'N')),

FOREIGN KEY (STORE_NO) REFERENCES STORE (STORE_NO)
);


-- ATTENDANCE 테이블
CREATE TABLE ATTENDANCE(
ATTENDANCE_NO NUMBER NOT NULL PRIMARY KEY,
MEMBER_NO NUMBER NOT NULL,
WORKING_TIME DATE NOT NULL,
WORKOUT_TIME DATE,
STATUS NUMBER,

FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
);

-- ANNOUNCEMENT 테이블
CREATE TABLE ANNOUNCEMENT(
ANNOUNCEMENT_NO NUMBER PRIMARY KEY,
ANNOUNCEMENT_TITLE VARCHAR2(100) NOT NULL,
ANNOUNCEMENT_DETAIL VARCHAR2(2000 CHAR),
MEMBER_NO NUMBER NOT NULL,
ANNOUNCEMENT_DATE DATE DEFAULT SYSDATE NOT NULL,
ANNOUNCEMENT_STATUS NUMBER DEFAULT 1 NOT NULL,

FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
);


-- REPLY 테이블
CREATE TABLE REPLY(
REPLY_NO NUMBER PRIMARY KEY,
ANNOUNCEMENT_NO NUMBER NOT NULL,
REPLY_CONTENT VARCHAR2(50) NOT NULL,
MEMBER_NO NUMBER NOT NULL,
CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,

FOREIGN KEY (ANNOUNCEMENT_NO) REFERENCES ANNOUNCEMENT (ANNOUNCEMENT_NO),
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
);

-- CIRCULATION 테이블
CREATE TABLE CIRCULATION(
CIRCULATION_NO NUMBER PRIMARY KEY,
STORE_NO NUMBER NOT NULL,
SET_NO VARCHAR2(100),
PRODUCT_NO NUMBER NOT NULL,
INPUT_PRICE NUMBER,
SALE_PRICE NUMBER,
CIRCULATION_AMOUNT NUMBER,
CIRCULATION_DATE DATE DEFAULT SYSDATE,
STATUS NUMBER NOT NULL,

FOREIGN KEY (STORE_NO) REFERENCES STORE (STORE_NO),
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT (PRODUCT_NO)
);



-- INVENTORY 테이블
CREATE TABLE INVENTORY(
INVENTORY_NO NUMBER PRIMARY KEY,
STORE_NO NUMBER NOT NULL,
PRODUCT_NO NUMBER NOT NULL,
INVENTORY_COUNT NUMBER NOT NULL,
EXPIRATION_DATE DATE,

FOREIGN KEY (STORE_NO) REFERENCES STORE (STORE_NO),
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT (PRODUCT_NO)
);


COMMENT ON COLUMN PRODUCT.AVAILABILITY IS '입고 Y/N';
COMMENT ON COLUMN STORE.STORE_STATUS IS '1.승인/2.미승인';
COMMENT ON COLUMN MEMBER.POSITION IS '1.본사 \2.지점장 3.매니저 4. 알바';
COMMENT ON COLUMN MEMBER.MEMBER_STATUS IS 'Y: 재직, N: 퇴직';
COMMENT ON COLUMN ANNOUNCEMENT.ANNOUNCEMENT_STATUS IS '1.Y/2,N';
COMMENT ON COLUMN CIRCULATION.STATUS IS '1.발주요청(본사:대기)/2.입고/3.판매/4.폐기/5.승인/6.거절/7.발주완료(지점:입고대기)';
COMMENT ON COLUMN PRODUCT.PRODUCT_STATUS IS '1.상품삭제, NULL:상품사용';

commit;